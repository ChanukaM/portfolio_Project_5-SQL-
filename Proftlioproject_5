/*

Cleaning Data in SQL Queries

*/

SELECT * 
FROM proftlio_project_2.dbo.NashvilleHousing

-------------------------------------------------------------------------------------------------------------------------------------------

--Standardize Date Format

SELECT SaleDate,CONVERT(DATE,SaleDate) 
FROM proftlio_project_2.dbo.NashvilleHousing

UPDATE proftlio_project_2.dbo.NashvilleHousing
SET SaleDate=CONVERT(DATE,SaleDate) 

------------------------------------------------------------------------------------------------------------------------------------------------------

--Populate Property Address data

SELECT PropertyAddress
FROM proftlio_project_2.dbo.NashvilleHousing 
WHERE PropertyAddress is null

SELECT a.ParcelID,a.PropertyAddress,b.ParcelID,b.PropertyAddress,ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM proftlio_project_2..NashvilleHousing a
JOIN proftlio_project_2..NashvilleHousing b
	ON a.ParcelID = b.ParcelID
AND a.UniqueID<>b.UniqueID
WHERE a.PropertyAddress is null

UPDATE a
SET propertyaddress=ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM proftlio_project_2..NashvilleHousing a
JOIN proftlio_project_2..NashvilleHousing b
	ON a.ParcelID = b.ParcelID
AND a.UniqueID<>b.UniqueID
WHERE a.PropertyAddress is null

-----------------------------------------------------------------------------------------------------------------------------------------------------------------+

--Breaking out Address into individual columns(Address,City,State)

SELECT PropertyAddress
FROM proftlio_project_2..NashvilleHousing

SELECT 
SUBSTRING(PropertyAddress,1,CHARINDEX(',',propertyAddress)-1) AS Address,
SUBSTRING(PropertyAddress,CHARINDEX(',',propertyAddress)+1, LEN(PropertyAddress)) AS Address
FROM proftlio_project_2..NashvilleHousing

ALTER TABLE proftlio_project_2..NashvilleHousing
ADD PropertySplitAddress NVARCHAR(225)

UPDATE proftlio_project_2..NashvilleHousing
SET PropertySplitAddress=SUBSTRING(PropertyAddress,1,CHARINDEX(',',propertyAddress)-1)

ALTER TABLE proftlio_project_2..NashvilleHousing
ADD propertySplitCity NVARCHAR(225)

UPDATE proftlio_project_2..NashvilleHousing
SET propertySplitCity=SUBSTRING(PropertyAddress,CHARINDEX(',',propertyAddress)+1, LEN(PropertyAddress))

SELECT * 
FROM proftlio_project_2..NashvilleHousing


SELECT OwnerAddress
FROM proftlio_project_2..NashvilleHousing

SELECT 
PARSENAME(REPLACE(OwnerAddress,',','.'),3),
PARSENAME(REPLACE(OwnerAddress,',','.'),2),
PARSENAME(REPLACE(OwnerAddress,',','.'),1)
FROM proftlio_project_2..NashvilleHousing


ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress Nvarchar(225)

UPDATE NashvilleHousing
SET OwnerSplitAddress=PARSENAME(REPLACE(OwnerAddress,',','.'),3)



ALTER TABLE NashvilleHousing
ADD OwnerScliptCity Nvarchar(225)

UPDATE NashvilleHousing
SET OwnerScliptCity=PARSENAME(REPLACE(OwnerAddress,',','.'),2)


ALTER TABLE NashvilleHousing
ADD OwnerScliptState Nvarchar(225)

UPDATE NashvilleHousing
SET OwnerScliptState=PARSENAME(REPLACE(OwnerAddress,',','.'),1)

SELECT * 
FROM proftlio_project_2..NashvilleHousing

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--Change Y and N to Yes and No in "Sold as Vacant" field

SELECT DISTINCT(SoldAsVacant),COUNT(SoldAsVacant)
FROM proftlio_project_2..NashvilleHousing
GROUP BY SoldAsVacant

SELECT SoldAsVacant,
CASE When SoldAsVacant='Y' THEN 'YES'
	When SoldAsVacant='N'THEN 'NO'
	ELSE SoldAsVacant
	END
FROM proftlio_project_2..NashvilleHousing

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--Remove Duplicates

SELECT *,
	ROW_NUMBER() OVER (
 PARTITION BY ParcelId,
			  PropertyAddress,
			  SalePrice,
			  SaleDate,
			  LegalReference
			  ORDER BY 
				UniqueID
					) row_num
FROM proftlio_project_2..NashvilleHousing

--USE CTE
WITH RowNumCTE AS(
SELECT *,
	ROW_NUMBER() OVER (
 PARTITION BY ParcelId,
			  PropertyAddress,
			  SalePrice,
			  SaleDate,
			  LegalReference
			  ORDER BY 
				UniqueID
					) row_num
FROM proftlio_project_2..NashvilleHousing
)
SELECT *
FROM RowNumCTE
WHERE row_num>1

----------------
WITH RowNumCTE AS(
SELECT *,
	ROW_NUMBER() OVER (
 PARTITION BY ParcelId,
			  PropertyAddress,
			  SalePrice,
			  SaleDate,
			  LegalReference
			  ORDER BY 
				UniqueID
					) row_num
FROM proftlio_project_2..NashvilleHousing
)
DELETE FROM RowNumCTE
WHERE row_num > 1

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--Delete Unused Columns

ALTER TABLE proftlio_project_2..NashvilleHousing
DROP COLUMN OwnerAddress,TaxDistrict,PropertyAddress,SaleDate

SELECT * 
FROM proftlio_project_2..NashvilleHousing